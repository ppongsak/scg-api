{
	"swagger": "2.0",
	"info": {
		"version": "1.0.1",
		"title": "Oauth2.0 API",
		"description": "RebateMango OAuth 2.0 API, NodeJS",
		"license": {
			"name": "www.rebatemango.com",
			"url": "www.rebatemango.com"
		}
	},
	"host": "35.185.188.38",
	"basePath": "",
	"tags": [
		{
			"name": "Tokens",
			"description": "Get Acccess Tokens ,Refresh Tokens and Scopes"
		},
		{
			"name": "Authorize",
			"description": "Request Login / Logout"
		},
		{
			"name": "Transactions",
			"description": "Request access transaction api"
		},
		{
			"name": "Permissions",
			"description": "Request access permission api"
		},
		{
			"name": "Profile",
			"description": "Request access profile api"
		}
	],
	"schemes": ["http"],
	"components": {
		"securitySchemes": [
			{
				"BasicAuth": {
					"type": "http",
					"scheme": "basic"
				}
			},
			{
				"BearerAuth": {
					"type": "http",
					"scheme": "bearer"
				}
			}
		]
	},
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"securityDefinitions": {
		"basicAuth": {
			"type": "basic"
		}
	},
	"security": {
		"basic": {}
	},
	"paths": {
		"/tokens": {
			"get": {
				"tags": ["Tokens"],
				"summary": "Get welcome message",
				"responses": {
					"200": {
						"description": "OK",
						"schema": {
							"$ref": "#/definitions/Tokens"
						}
					}
				}
			},
			"post": {
				"tags": ["Tokens"],
				"summary": "Get Token and Refresh Token",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to create new token",
						"schema": {
							"$ref": "#/definitions/TokenRequest"
						}
					}
				],
				"responses": {
					"201": {
						"success": true,
						"description": "created",
						"schema": {
							"$ref": "#/definitions/TokenReponse"
						}
					}
				}
			}
		},
		"/tokens/refresh": {
			"post": {
				"tags": ["Tokens"],
				"summary": "Refresh Token when token expired",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to refresh new token",
						"schema": {
							"$ref": "#/definitions/RefreshTokenRequest"
						}
					}
				],
				"responses": {
					"201": {
						"success": true,
						"description": "refreshed",
						"schema": {
							"$ref": "#/definitions/RefreshTokenResponse"
						}
					}
				}
			}
		},
		"/authorize/login": {
			"post": {
				"tags": ["Authorize"],
				"summary": "authen user login",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to login",
						"schema": {
							"properties": {
								"username": { "type": "string", "example": "xxxxx@email.com" },
								"password": { "type": "string", "example": "xxxxxxxxxxxx" },
								"grant_type": {
									"type": "string",
									"example": "authorization_code"
								},
								"scope": { "type": "string", "example": "user:login" }
							}
						}
					}
				],
				"responses": {
					"200": {
						"success": true,
						"description": "ok",
						"schema": {
							"properties": {
								"success": { "type": "boolean", "example": true },
								"message": { "type": "string", "example": "success" },
								"data": {
									"properties": {
										"authorization_code": {
											"type": "string",
											"example": "xxxxxxxxxxxxxxxxx"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/authorize/logout": {
			"post": {
				"tags": ["Authorize"],
				"summary": "authen user logout",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to logout",
						"schema": {
							"properties": {
								"client_id": {
									"type": "string",
									"example": "xxxxxxxx"
								},
								"scope": {
									"type": "string",
									"example": "user:logout"
								}
							}
						}
					}
				],
				"responses": {
					"200": {
						"success": true,
						"description": "ok",
						"schema": {
							"properties": {
								"success": { "type": "boolean", "example": true },
								"message": { "type": "string", "example": "logout success" },
								"data": {
									"properties": {
										"username": {
											"type": "string",
											"example": "xxxxxxx@email.com"
										}
									}
								}
							}
						}
					},
					"400": {
						"success": false,
						"description": "expired",
						"schema": {
							"properties": {
								"success": {
									"type": "boolean",
									"example": false
								},
								"errors": {
									"type": "string",
									"example": "token was expired"
								},
								"data": {
									"properties": {
										"type": "string",
										"example": "{}"
									}
								}
							}
						}
					}
				}
			}
		},
		"/transactions": {
			"post": {
				"tags": ["Transactions"],
				"summary": "authen request access transactions api",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to view transactions",
						"schema": {
							"$ref": "#/definitions/TransactionsRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "ok",
						"schema": {
							"$ref": "#/definitions/TransactionsResponse"
						}
					}
				}
			}
		},
		"/users": {
			"get": {
				"tags": ["Users"],
				"summary": "Get user"
			},
			"post": {
				"tags": ["Users"],
				"summary": "Create new user",
				"parameters": [
					{
						"name": "user",
						"in": "body",
						"description": "Request for create new user",
						"schema": {
							"$ref": "#/definitions/UsersCreateRequest"
						}
					}
				],
				"responses": {
					"200": {
						"success": true,
						"description": "ok",
						"schema": {
							"$ref": "#/definitions/UsersCreateResponse"
						}
					}
				}
			},
			"put": {
				"tags": ["Users"],
				"summary": "Update existed user",
				"parameters": [
					{
						"name": "user",
						"in": "body",
						"description": "Request for update existed user",
						"schema": {
							"$ref": "#/definitions/UsersUpdateRequest"
						}
					}
				],
				"responses": {
					"200": {
						"success": true,
						"description": "ok",
						"schema": {
							"$ref": "#/definitions/UsersUpdateResponse200"
						}
					},
					"400": {
						"success": false,
						"description": "fail",
						"schema": {
							"$ref": "#/definitions/UsersUpdateResponse400"
						}
					},
					"500": {
						"success": false,
						"description": "internal error",
						"schema": {
							"$ref": "#/definitions/UsersUpdateResponse500"
						}
					}
				}
			},
			"delete": {
				"tags": ["Users"],
				"summary": "Delete existed user",
				"parameters": [
					{
						"name": "user",
						"in": "body",
						"description": "Request for delete existed user",
						"schema": {
							"$ref": "#/definitions/UsersDeleteRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "ok",
						"schema": {
							"$ref": "#/definitions/UsersDeleteResponse200"
						}
					},
					"400": {
						"description": "fail",
						"schema": {
							"$ref": "#/definitions/UsersDeleteResponse400"
						}
					},
					"500": {
						"description": "internal error",
						"schema": {
							"$ref": "#/definitions/UsersDeleteResponse500"
						}
					}
				}
			}
		},
		"/users/authoize": {
			"post": {
				"tags": ["Users Authorize"],
				"summary": "authen request access user api",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to view transactions",
						"schema": {
							"$ref": "#/definitions/TransactionsRequest"
						}
					}
				],
				"responses": {
					"200": {
						"success": true,
						"description": "ok",
						"schema": {
							"$ref": "#/definitions/TransactionsReponse"
						}
					}
				}
			}
		},
		"/profile": {
			"post": {
				"tags": ["Profile"],
				"summary": "authen request access profiles api",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to access profile",
						"schema": {
							"$ref": "#/definitions/ProfilesRequest"
						}
					}
				],
				"responses": {
					"200": {
						"success": true,
						"description": "ok",
						"schema": {
							"$ref": "#/definitions/ProfilesResponse"
						}
					}
				}
			}
		},
		"/permissions": {
			"post": {
				"tags": ["Permissions"],
				"summary": "authen request access permissions api",
				"parameters": [
					{
						"name": "token",
						"in": "body",
						"description": "client need to access permissions api",
						"schema": {
							"$ref": "#/definitions/PermissionRequest"
						}
					}
				],
				"responses": {
					"200": {
						"success": true,
						"description": "ok",
						"schema": {
							"$ref": "#/definitions/PermissionsResponse"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"User": {
			"required": ["email", "_id"],
			"properties": {
				"_id": {
					"type": "string",
					"uniqueItems": true
				},
				"email": {
					"type": "string",
					"uniqueItems": true
				}
			}
		},
		"Users": {
			"type": "array",
			"$ref": "#/definitions/User"
		},
		"TokenRequest": {
			"properties": {
				"required": ["username", "password", "scope", "grant_type"],
				"username": {
					"type": "string",
					"uniqueItems": true
				},
				"password": {
					"type": "string"
				},
				"scope": {
					"type": "string"
				},
				"grant_type": {
					"type": "string"
				}
			}
		},
		"TokenReponse": {
			"properties": {
				"access_token": {
					"type": "string",
					"uniqueItems": true
				},
				"token_type": {
					"type": "string"
				},
				"expires_in": {
					"type": "integer"
				},
				"refresh_token": {
					"type": "string",
					"uniqueItems": true
				},
				"scope": {
					"type": "string"
				}
			}
		},
		"TokenSPARequest": {
			"properties": {
				"required": ["grant_type", "redirect_uri", "code", "client_id"],
				"grant_type": {
					"type": "string",
					"description": "Value MUST be set to \"authorization_code\"",
					"example": "authorization_code"
				},
				"code": {
					"type": "string",
					"description": "The authorization code received from the authorization server.",
					"example": "xxxxxxxxxxxxxxxx"
				},
				"redirect_uri": {
					"type": "string",
					"description": "URL to redirect back to main server",
					"example": "http%3A%2F%2Frebatemango.com"
				},
				"client_id": {
					"type": "string",
					"description": "client_id to identify that system comes from",
					"example": "rebatemango"
				},
				"state": {
					"type": "string",
					"description": "The csrf token to verify to identity data",
					"example": "xxxxxxx"
				}
			}
		},
		"TokenSPAReponse": {
			"properties": {
				"access_token": {
					"type": "string",
					"uniqueItems": true,
					"description": "The access token issued by the authorization server.",
					"example": "xxxxxxxxxxxxxxxx"
				},
				"token_type": {
					"type": "string",
					"description": "The type of the token",
					"example": "code"
				},
				"expires_in": {
					"type": "integer",
					"description": "Expired token time",
					"example": 3600
				},
				"state": {
					"type": "string",
					"description": "",
					"example": "xxxxxxx"
				}
			}
		},
		"RefreshTokenRequest": {
			"properties": {
				"required": ["refresh_token", "grant_type"],
				"refresh_token": {
					"type": "string"
				},
				"grant_type": {
					"type": "string"
				}
			}
		},
		"RefreshTokenResponse": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"message": {
					"type": "string"
				},
				"data": {
					"type": "object",
					"properties": {
						"access_token": {
							"type": "string",
							"uniqueItems": true
						},
						"token_type": {
							"type": "string"
						},
						"expires_in": {
							"type": "integer"
						},
						"refresh_token": {
							"type": "string",
							"uniqueItems": true
						},
						"scope": {
							"type": "string"
						}
					}
				}
			}
		},
		"AuhorizeRequest": {
			"properties": {
				"required": ["client_id", "scope"],
				"client_id": {
					"type": "string"
				},
				"scope": {
					"type": "string"
				}
			}
		},
		"AuhorizeResponse": {
			"properties": {
				"success": { "type": "boolean" },
				"message": {
					"type": "string"
				},
				"data": {
					"properties": {
						"username": {
							"type": "string",
							"uniqueItems": true
						}
					}
				}
			}
		},
		"TransactionsRequest": {
			"properties": {
				"required": ["token", "client_id", "username"],
				"token": {
					"type": "string",
					"uniqueItems": true
				},
				"client_id": {
					"type": "string"
				},
				"username": {
					"type": "string",
					"uniqueItems": true
				}
			}
		},
		"TransactionsResponse": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"message": {
					"type": "string"
				}
			}
		},
		"UsersCreateRequest": {
			"properties": {
				"required": ["username", "password", "email", "type", "scope"],
				"username": {
					"type": "string",
					"uniqueItems": true
				},
				"password": {
					"type": "string"
				},
				"email": {
					"type": "string",
					"uniqueItems": true
				},
				"type": { "type": "string" },
				"scope": { "type": "string" }
			}
		},
		"UsersCreateResponse": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"errors": {
					"type": "object"
				}
			}
		},
		"UsersUpdateRequest": {
			"properties": {
				"required": ["username", "email", "scope"],
				"username": {
					"type": "string",
					"uniqueItems": true
				},
				"email": {
					"type": "string"
				},
				"scope": {
					"type": "string"
				}
			}
		},
		"UsersUpdateResponse200": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"message": {
					"type": "string"
				}
			}
		},
		"UsersUpdateResponse400": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"errors": {
					"type": "string"
				}
			}
		},
		"UsersUpdateResponse500": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"errors": {
					"type": "string"
				}
			}
		},
		"UsersDeleteRequest": {
			"properties": {
				"required": ["username", "realdelete", "scope"],
				"username": {
					"type": "string",
					"uniqueItems": true
				},
				"realdelete": {
					"type": "string"
				},
				"scope": {
					"type": "string"
				}
			}
		},
		"UsersDeleteResponse200": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"message": {
					"type": "string"
				}
			}
		},
		"UsersDeleteResponse400": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"errors": {
					"type": "string"
				}
			}
		},
		"UsersDeleteResponse500": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"errors": {
					"type": "string"
				}
			}
		},
		"ProfilesRequest": {
			"properties": {
				"required": ["client_id", "username", "scope"],
				"client_id": {
					"type": "string"
				},
				"username": {
					"type": "string",
					"uniqueItems": true
				},
				"scope": {
					"type": "string"
				}
			}
		},
		"ProfilesResponse": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"message": {
					"type": "string"
				}
			}
		},
		"PermissionsRequest": {
			"properties": {
				"required": ["client_id", "username", "scope"],
				"client_id": {
					"type": "string"
				},
				"username": {
					"type": "string",
					"uniqueItems": true
				},
				"scope": {
					"type": "string"
				}
			}
		},
		"PermissionsResponse": {
			"properties": {
				"success": {
					"type": "boolean"
				},
				"data": {
					"type": "object"
				},
				"message": {
					"type": "string"
				}
			}
		}
	}
}
